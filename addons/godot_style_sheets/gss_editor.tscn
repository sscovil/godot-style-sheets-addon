[gd_scene load_steps=5 format=3 uid="uid://bux6owfo76oki"]

[ext_resource type="Script" path="res://addons/godot_style_sheets/gss_editor.gd" id="1_803gf"]
[ext_resource type="Script" path="res://addons/godot_style_sheets/gss_syntax_highlighter.gd" id="2_c2wjg"]
[ext_resource type="Script" path="res://addons/godot_style_sheets/gss_code_edit.gd" id="3_8vnvk"]

[sub_resource type="SyntaxHighlighter" id="SyntaxHighlighter_qxr15"]
script = ExtResource("2_c2wjg")

[node name="GSSEditor" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource("1_803gf")

[node name="SplitContainer" type="HSplitContainer" parent="."]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="FileListContainer" type="VBoxContainer" parent="SplitContainer"]
custom_minimum_size = Vector2(400, 2.08165e-12)
layout_mode = 2

[node name="FileListMenuBar" type="MenuBar" parent="SplitContainer/FileListContainer"]
custom_minimum_size = Vector2(2.08165e-12, 30)
layout_mode = 2
focus_next = NodePath("../ScrollContainer/FileList")
flat = true
prefer_global_menu = false

[node name="File" type="PopupMenu" parent="SplitContainer/FileListContainer/FileListMenuBar"]
title = "File"
size = Vector2i(136, 100)
allow_search = false
item_count = 8
item_0/text = "New GSS File..."
item_1/text = "Load GSS File..."
item_1/id = 1
item_2/id = 100
item_2/separator = true
item_3/text = "Save File"
item_3/id = 2
item_4/text = "Save File As..."
item_4/id = 3
item_5/id = 101
item_5/separator = true
item_6/text = "Export GSS to Theme File..."
item_6/id = 4
item_7/text = "Import Theme to GSS File..."
item_7/id = 5

[node name="ScrollContainer" type="ScrollContainer" parent="SplitContainer/FileListContainer"]
layout_mode = 2
size_flags_vertical = 3

[node name="FileList" type="ItemList" parent="SplitContainer/FileListContainer/ScrollContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
focus_neighbor_top = NodePath("../../FileListMenuBar")
focus_neighbor_right = NodePath("../../../FileEditorContainer/FileEditor")
focus_next = NodePath("../../../FileEditorContainer/FileEditor")
focus_previous = NodePath("../../FileListMenuBar")
allow_reselect = true
item_count = 2
item_0/text = "test_stylesheet.gss"
item_1/text = "test_stylesheet_copy.gss"

[node name="RenameFile" type="LineEdit" parent="SplitContainer/FileListContainer/ScrollContainer/FileList"]
visible = false
layout_mode = 2
offset_left = 4.0
offset_top = 4.0
offset_right = 71.0625
offset_bottom = 35.0

[node name="FileEditorContainer" type="VBoxContainer" parent="SplitContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="FileEditor" type="CodeEdit" parent="SplitContainer/FileEditorContainer"]
layout_mode = 2
size_flags_vertical = 3
focus_neighbor_left = NodePath("../../FileListContainer/ScrollContainer/FileList")
focus_previous = NodePath("../../FileListContainer/ScrollContainer/FileList")
text = "## This is a COPY of a Godot style sheet!

# This is the style definition for a Button theme type.
Button:
	# You can define colors using Godot's Color class.
	bg_color: Color(0, 0, 0, 0.4)
	
	# The corner_radius property applies the same radius to top left, top right, bottom left, and bottom right.
	corner_radius: 20px
	
	# Likewise, you can define top, bottom, left, and right separately, or apply the same margin value to all sides.
	expand_margin: 20px
	
	# You can define fonts using the `res://` prefix to reference a font file in your project.
	font: \"res://examples/assets/fonts/roboto_mono/static/RobotoMono-Regular.ttf\"
	
	# The `px` suffix on pixel size values is optional and will be ignored.
	font_size: 20px

	# This is the style definition for a Button theme type when it is disabled.
	disabled:
		# You can define colors using hex codes, with or without alpha values.
		bg_color: #FF22CC  # This would also work: `bg_color: #F2C`.
		
		# These properties will override the `normal` style values for the Button theme type.
		corner_radius_top_left: 0
		corner_radius_bottom_right: 0
		expand_margin_top: 0
		expand_margin_bottom: 0
	
	# This is the style definition for a Button theme type when it is hovered over.
	hover:
		# You can define colors using Godot's Color constants.
		bg_color: Color.RED
	

	# This is the style definition for a Button theme type when it is pressed.
	pressed:
		# You can define colors using case-insensitive color names that are in Godot's Color constants.
		bg_color: purple  # This is the same as `font_color: Color.BLUE`.
"
syntax_highlighter = SubResource("SyntaxHighlighter_qxr15")
gutters_draw_line_numbers = true
delimiter_comments = Array[String](["##", "#"])
code_completion_enabled = true
code_completion_prefixes = Array[String](["A", "B", "C", "D", "E", "F", "G", "H", "I", "L", "M", "N", "O", "P", "R", "S", "T", "V", "W"])
script = ExtResource("3_8vnvk")
